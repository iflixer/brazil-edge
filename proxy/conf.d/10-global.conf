client_max_body_size 50M;

log_format upstream_html '[$time_local] $upstream_status $upstream_cache_status $status $upstream_response_time $upstream_addr $host $request_method "$request_uri"';
log_format upstream_stat '[$time_local] $upstream_status $upstream_cache_status $status $upstream_response_time $upstream_addr $host $request_method "$request_uri"';

proxy_cache_path /opt/nginx/static levels=1:2 keys_zone=static_zone:10m max_size=3g inactive=3d use_temp_path=off;
proxy_cache_path /opt/nginx/html levels=1:2 keys_zone=html_zone:10m max_size=3g inactive=3d use_temp_path=off;
proxy_cache_key "$host$uri$is_args$args";


proxy_connect_timeout 5s;  # Ожидание подключения
proxy_send_timeout 10s;      # Таймаут отправки запроса
proxy_read_timeout 15s;      # Таймаут чтения ответа
proxy_next_upstream_timeout 60s; # Limits the time during which a request can be passed to the next server. The 0 value turns off this limitation.

proxy_ignore_client_abort on; # break the connection to backend if client closes the connection

proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504 http_429; # 
proxy_next_upstream_tries 2;
proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504 http_429;

proxy_cache_lock on;
proxy_cache_lock_timeout 10s;
proxy_cache_background_update on;
# proxy_cache_valid 5m; #200, 301, 302
# proxy_cache_valid 404 1m;
proxy_buffering on;


# защита от отсутствия заголовка CF-Connecting-IP без него все запросы пойдут на 1 бекенд
map $http_cf_connecting_ip $real_client_ip {
    default $http_cf_connecting_ip;
    ""      $remote_addr;
}